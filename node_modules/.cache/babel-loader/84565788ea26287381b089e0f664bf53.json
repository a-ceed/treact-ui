{"ast":null,"code":"import _slicedToArray from\"C:/git/treact-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState}from\"react\";import{useAnimation,useCycle}from\"framer-motion\";//Below logic is for toggling the navbar when toggleNavbar is called. It is used on mobile toggling of navbar.\nexport default function useAnimatedNavToggler(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),showNavLinks=_useState2[0],setShowNavLinks=_useState2[1];var _useCycle=useCycle(\"0%\",\"150%\"),_useCycle2=_slicedToArray(_useCycle,2),x=_useCycle2[0],cycleX=_useCycle2[1];var animation=useAnimation();var toggleNavbar=function toggleNavbar(){setShowNavLinks(!showNavLinks);animation.start({x:x,display:\"block\"});cycleX();};return{showNavLinks:showNavLinks,animation:animation,toggleNavbar:toggleNavbar};}","map":{"version":3,"sources":["C:/git/treact-ui/src/helpers/useAnimatedNavToggler.js"],"names":["useState","useAnimation","useCycle","useAnimatedNavToggler","showNavLinks","setShowNavLinks","x","cycleX","animation","toggleNavbar","start","display"],"mappings":"uIAAA,OAASA,QAAT,KAAyB,OAAzB,CACA,OAASC,YAAT,CAAuBC,QAAvB,KAAuC,eAAvC,CAEA;AACA,cAAe,SAASC,CAAAA,qBAAT,EAAiC,CAC9C,cAAwCH,QAAQ,CAAC,KAAD,CAAhD,wCAAOI,YAAP,eAAqBC,eAArB,eACA,cAAoBH,QAAQ,CAAC,IAAD,CAAO,MAAP,CAA5B,wCAAOI,CAAP,eAAUC,MAAV,eACA,GAAMC,CAAAA,SAAS,CAAGP,YAAY,EAA9B,CAEA,GAAMQ,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CACzBJ,eAAe,CAAC,CAACD,YAAF,CAAf,CACAI,SAAS,CAACE,KAAV,CAAgB,CAAEJ,CAAC,CAAEA,CAAL,CAAQK,OAAO,CAAE,OAAjB,CAAhB,EACAJ,MAAM,GACP,CAJD,CAMA,MAAO,CAACH,YAAY,CAAZA,YAAD,CAAcI,SAAS,CAATA,SAAd,CAAyBC,YAAY,CAAZA,YAAzB,CAAP,CACD","sourcesContent":["import { useState } from \"react\";\r\nimport { useAnimation, useCycle } from \"framer-motion\";\r\n\r\n//Below logic is for toggling the navbar when toggleNavbar is called. It is used on mobile toggling of navbar.\r\nexport default function useAnimatedNavToggler() {\r\n  const [showNavLinks, setShowNavLinks] = useState(false);\r\n  const [x, cycleX] = useCycle(\"0%\", \"150%\");\r\n  const animation = useAnimation();\r\n\r\n  const toggleNavbar = () => {\r\n    setShowNavLinks(!showNavLinks);\r\n    animation.start({ x: x, display: \"block\" });\r\n    cycleX();\r\n  };\r\n\r\n  return {showNavLinks,animation, toggleNavbar }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}